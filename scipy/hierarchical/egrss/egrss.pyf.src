!    -*- f90 -*-
python module _egrss 
    interface ! in :_egrss
        subroutine dtrmv(uplo,trans,n,p,u,ldu,vt,ldvt,d,incd,x,incx,work,lwork,info)
            character :: uplo
            character :: trans
            integer optional,check(shape(u, 0) == n),depend(u) :: n=shape(u, 0)
            integer optional,check(shape(u, 1) == p),depend(u) :: p=shape(u, 1)
            integer optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u,0)
            integer optional,check(shape(vt,0)==ldvt),depend(vt) :: ldvt=shape(vt,0)
            integer optional,intent(in),depend(p) :: lwork = p
            integer optional,intent(in),check(incx>0||incx<0) :: incx = 1
            integer optional,intent(in),check(incd>0||incd<0) :: incd = 1

            double precision dimension(ldu,*) :: u
            double precision dimension(ldvt,*) :: vt
            double precision dimension(*) :: d
            double precision dimension(*), intent(in,out,copy,out=y) :: x
            double precision dimension(lwork),intent(hide,cache),depend(lwork) :: work
            integer intent(out) :: info
        end subroutine dtrsv

        subroutine dtrmm(uplo,trans,m,n,p,u,ldu,vt,ldvt,d,incd,b,ldb,work,lwork)
            character :: uplo
            character :: trans
            integer optional,check(shape(b, 0) == m),depend(b) :: m=shape(b, 0)
            integer optional,check(shape(b, 1) == n),depend(b) :: n=shape(b, 1)
            integer optional,check(shape(u, 1) == p),depend(u) :: p=shape(u, 1)
            integer optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u, 0)
            integer optional,check(shape(vt,0)==ldvt),depend(vt) :: ldvt=shape(vt, 0)
            integer optional,check(shape(b,0)==ldb),depend(b) :: ldb=shape(b, 0)
            integer optional,intent(in),depend(p) :: lwork = p
            integer optional,intent(in),check(incd>0||incd<0) :: incd = 1

            double precision dimension(ldu,*) :: u
            double precision dimension(ldvt,*) :: vt
            double precision dimension(*) :: d
            double precision dimension(ldb,*),intent(in,out,copy,out=x) :: b
            double precision dimension(lwork),intent(hide,cache),depend(lwork) :: work
        end subroutine dtrmm

        subroutine dtrsm(uplo,trans,m,n,p,u,ldu,vt,ldvt,d,incd,b,ldb,work,lwork)
            character :: uplo
            character :: trans
            integer optional,check(shape(b, 0) == m),depend(b) :: m=shape(b, 0)
            integer optional,check(shape(b, 1) == n),depend(b) :: n=shape(b, 1)
            integer optional,check(shape(u, 1) == p),depend(u) :: p=shape(u, 1)
            integer optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u, 0)
            integer optional,check(shape(vt,0)==ldvt),depend(vt) :: ldvt=shape(vt, 0)
            integer optional,check(shape(b,0)==ldb),depend(b) :: ldb=shape(b, 0)
            integer optional,intent(in),depend(p) :: lwork = p
            integer optional,intent(in),check(incd>0||incd<0) :: incd = 1

            double precision dimension(ldu,*) :: u
            double precision dimension(ldvt,*) :: vt
            double precision dimension(*) :: d
            double precision dimension(ldb,*),intent(in,out,copy,out=x) :: b
            double precision dimension(lwork),intent(hide,cache),depend(lwork) :: work
        end subroutine dtrsm

        subroutine dtrtrs(uplo,trans,n,p,nrhs,u,ldu,vt,ldvt,d,incd,b,ldb,work,lwork,info)
            character :: uplo
            character :: trans
            integer optional,check(shape(b, 1) == n),depend(b) :: n=shape(b, 0)
            integer optional,check(shape(b, 0) == nrhs),depend(b) :: m=shape(b, 1)
            integer optional,check(shape(u, 1) == p),depend(u) :: p=shape(u, 1)
            integer optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u, 0)
            integer optional,check(shape(vt,0)==ldvt),depend(vt) :: ldvt=shape(vt, 0)
            integer optional,check(shape(b,0)==ldb),depend(b) :: ldb=shape(b, 0)
            integer optional,intent(in),depend(p) :: lwork = p
            integer optional,intent(in),check(incd>0||incd<0) :: incd = 1

            double precision dimension(ldu,*) :: u
            double precision dimension(ldvt,*) :: vt
            double precision dimension(*) :: d
            double precision dimension(ldb,*),intent(in,out,copy,out=x) :: b
            double precision dimension(lwork),intent(hide,cache),depend(lwork) :: work
            integer intent(out) :: info
        end subroutine dtrtrs

        subroutine dtrsv(uplo,trans,n,p,u,ldu,vt,ldvt,d,incd,b,incb,work,lwork,info)
            character :: uplo
            character :: trans
            integer optional,check(shape(u, 0) == n),depend(u) :: n=shape(u, 0)
            integer optional,check(shape(u, 1) == p),depend(u) :: p=shape(u, 1)
            integer optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u,0)
            integer optional,check(shape(vt,0)==ldvt),depend(vt) :: ldvt=shape(vt,0)
            integer optional,intent(in),depend(p) :: lwork = p
            integer optional,intent(in),check(incb>0||incb<0) :: incb = 1
            integer optional,intent(in),check(incd>0||incd<0) :: incd = 1

            double precision dimension(ldu,*) :: u
            double precision dimension(ldvt,*) :: vt
            double precision dimension(*) :: d
            double precision dimension(*), intent(in,out,copy,out=x) :: b
            double precision dimension(lwork),intent(hide,cache),depend(lwork) :: work
            integer intent(out) :: info
        end subroutine dtrsv
    end interface 
end python module _egrss

! This file was auto-generated with f2py (version:1.26.4).
! See:
! https://web.archive.org/web/20140822061353/http://cens.ioc.ee/projects/f2py2e